<?xml version="1.0"?>
<project name="Documentation">
                <file path="autoload.php" hash="aa06b2fa9050abaa6bf07f0bdfc7793e">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
            

            
                        
                        
                        
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="composer/autoload_classmap.php" hash="aac29324a3165c9f31ba1e3d1968dd9e">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
            

            
                        
                        
                        
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="composer/autoload_namespaces.php" hash="224007c97efb82c7b45b0e92f240af41">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
            

            
                        
                        
                        
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="composer/autoload_psr4.php" hash="e112f08f5f949cef50b1c42e78ea2f63">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
            

            
                        
                        
                        
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="composer/autoload_real.php" hash="e69d3912f289bd490876b500fdcc9698">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
            

            
                        
                        
                                        <class final="false" abstract="false" namespace="\" line="5">
                    <name>ComposerAutoloaderInite17cba945be499726e4323268288eb20</name>
                    <full_name>\ComposerAutoloaderInite17cba945be499726e4323268288eb20</full_name>
                    <docblock line="5">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>

                    
                    
                                        
                                            <property namespace="\ComposerAutoloaderInite17cba945be499726e4323268288eb20" line="7" visibility="private">
    <name>loader</name>
    <full_name>\ComposerAutoloaderInite17cba945be499726e4323268288eb20::$loader</full_name>
    <default></default>
        <docblock line="7">
    <description></description>
    <long-description></long-description>
                </docblock>

</property>

                                        
                                            <method final="false"
        abstract="false"
        static="true"
        namespace=""
        startLine="9"
        startColumn="148"
        endLine="14"
        endColumn="323"
        visibility="public"
        returnByReference="false"
        response="mixed">
    <name>loadClassLoader</name>
    <full_name>\ComposerAutoloaderInite17cba945be499726e4323268288eb20::loadClassLoader()</full_name>
    <value></value>
                <argument line="9" by_reference="false">
    <name>class</name>
    <default></default>
    <type>mixed</type>
</argument>

        <docblock line="9">
    <description></description>
    <long-description></long-description>
                            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace=""
        startLine="19"
        startColumn="392"
        endLine="35"
        endColumn="1083"
        visibility="public"
        returnByReference="false"
        response="\Composer\Autoload\ClassLoader">
    <name>getLoader</name>
    <full_name>\ComposerAutoloaderInite17cba945be499726e4323268288eb20::getLoader()</full_name>
    <value></value>
            <docblock line="19">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="\Composer\Autoload\ClassLoader"/>
            </docblock>

</method>

                                                        </class>
            
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="composer/autoload_static.php" hash="8e4cc6251e6313e77ba24d2bb7687387">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
                            <namespace-alias name="\Composer\Autoload"/>
            

            
                        
                        
                                        <class final="false" abstract="false" namespace="\Composer\Autoload" line="7">
                    <name>ComposerStaticInite17cba945be499726e4323268288eb20</name>
                    <full_name>\Composer\Autoload\ComposerStaticInite17cba945be499726e4323268288eb20</full_name>
                    <docblock line="7">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>

                    
                    
                                        
                                            <property namespace="\Composer\Autoload\ComposerStaticInite17cba945be499726e4323268288eb20" line="9" visibility="public">
    <name>prefixLengthsPsr4</name>
    <full_name>\Composer\Autoload\ComposerStaticInite17cba945be499726e4323268288eb20::$prefixLengthsPsr4</full_name>
    <default>array(&#039;L&#039; =&gt; array(&#039;LeoVie\\DTORepository\\&#039; =&gt; 21))</default>
        <docblock line="9">
    <description></description>
    <long-description></long-description>
                </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ComposerStaticInite17cba945be499726e4323268288eb20" line="16" visibility="public">
    <name>prefixDirsPsr4</name>
    <full_name>\Composer\Autoload\ComposerStaticInite17cba945be499726e4323268288eb20::$prefixDirsPsr4</full_name>
    <default>array(&#039;LeoVie\\DTORepository\\&#039; =&gt; array(0 =&gt; __DIR__ . &#039;/..&#039; . &#039;/leovie/dto-repository/src&#039;))</default>
        <docblock line="16">
    <description></description>
    <long-description></long-description>
                </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ComposerStaticInite17cba945be499726e4323268288eb20" line="23" visibility="public">
    <name>classMap</name>
    <full_name>\Composer\Autoload\ComposerStaticInite17cba945be499726e4323268288eb20::$classMap</full_name>
    <default>array(&#039;Composer\\InstalledVersions&#039; =&gt; __DIR__ . &#039;/..&#039; . &#039;/composer/InstalledVersions.php&#039;, &#039;LeoVie\\CloneDetectionTestdataWithDTOs\\DTO&#039; =&gt; __DIR__ . &#039;/../..&#039; . &#039;/src/DTO.php&#039;, &#039;LeoVie\\CloneDetectionTestdataWithDTOs\\ToAnalyze\\A&#039; =&gt; __DIR__ . &#039;/../..&#039; . &#039;/src/ToAnalyze/01_A.php&#039;, &#039;LeoVie\\CloneDetectionTestdataWithDTOs\\ToAnalyze\\A_Changed_Syntax&#039; =&gt; __DIR__ . &#039;/../..&#039; . &#039;/src/ToAnalyze/04_A_Changed_Syntax.php&#039;, &#039;LeoVie\\CloneDetectionTestdataWithDTOs\\ToAnalyze\\A_Exact_Copy&#039; =&gt; __DIR__ . &#039;/../..&#039; . &#039;/src/ToAnalyze/03_A_Exact_Copy.php&#039;, &#039;LeoVie\\CloneDetectionTestdataWithDTOs\\ToAnalyze\\B&#039; =&gt; __DIR__ . &#039;/../..&#039; . &#039;/src/ToAnalyze/02_B.php&#039;, &#039;LeoVie\\DTORepository\\VendorDTO&#039; =&gt; __DIR__ . &#039;/..&#039; . &#039;/leovie/dto-repository/src/VendorDTO.php&#039;)</default>
        <docblock line="23">
    <description></description>
    <long-description></long-description>
                </docblock>

</property>

                                        
                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer\Autoload"
        startLine="33"
        startColumn="1322"
        endLine="41"
        endColumn="1803"
        visibility="public"
        returnByReference="false"
        response="mixed">
    <name>getInitializer</name>
    <full_name>\Composer\Autoload\ComposerStaticInite17cba945be499726e4323268288eb20::getInitializer()</full_name>
    <value></value>
                <argument line="33" by_reference="false">
    <name>loader</name>
    <default></default>
    <type>\Composer\Autoload\ClassLoader</type>
</argument>

        <docblock line="33">
    <description></description>
    <long-description></long-description>
                            </docblock>

</method>

                                                        </class>
            
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="composer/ClassLoader.php" hash="80e3127bb630c512c42cfb51366ec09c">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
                            <namespace-alias name="\Composer\Autoload"/>
            

            
                                        <function namespace="\Composer\Autoload" line="569" package="\Application" returnByReference="false">
                    <name>includeFile</name>
                    <full_name>\Composer\Autoload\includeFile()</full_name>
                    <docblock line="569">
    <description>Scope isolated include.</description>
    <long-description>Prevents access to $this/self from included files.</long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
                            <tag
                name="param"
                description=""
                                                                 variable="file"                                 type="string"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
                            <tag
                name="private"
                description=""
                                                                                                />
            </docblock>

                                            <argument line="569" by_reference="false">
    <name>file</name>
    <default></default>
    <type>string</type>
</argument>

                                    </function>
            
                        
                                        <class final="false" abstract="false" namespace="\Composer\Autoload" line="43">
                    <name>ClassLoader</name>
                    <full_name>\Composer\Autoload\ClassLoader</full_name>
                    <docblock line="43">
    <description>ClassLoader implements a PSR-0, PSR-4 and classmap class loader.</description>
    <long-description>$loader = new \Composer\Autoload\ClassLoader();

    // register classes with namespaces
    $loader-&gt;add(&#039;Symfony\Component&#039;, __DIR__.&#039;/component&#039;);
    $loader-&gt;add(&#039;Symfony&#039;,           __DIR__.&#039;/framework&#039;);

    // activate the autoloader
    $loader-&gt;register();

    // to enable searching the include path (eg. for PEAR packages)
    $loader-&gt;setUseIncludePath(true);

In this example, if you try to use a class in the Symfony\Component
namespace or one of its children (Symfony\Component\Console for instance),
the autoloader will first look for the class under the component/
directory, and it will then fallback to the framework/ directory if not
found before giving up.

This class is loosely based on the Symfony UniversalClassLoader.</long-description>
                    <tag
                name="author"
                description="Fabien Potencier &lt;fabien@symfony.com&gt;"
                                                                                                />
                <tag
                name="author"
                description="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"
                                                                                                />
                            <tag
                name="see"
                description=""
                                                 link="https://www.php-fig.org/psr/psr-0/"                                                />
                <tag
                name="see"
                description=""
                                                 link="https://www.php-fig.org/psr/psr-4/"                                                />
                            <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>

                    
                    
                                        
                                            <property namespace="\Composer\Autoload\ClassLoader" line="46" visibility="private">
    <name>vendorDir</name>
    <full_name>\Composer\Autoload\ClassLoader::$vendorDir</full_name>
    <default></default>
        <docblock line="46">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="?string"/>
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="53" visibility="private">
    <name>prefixLengthsPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::$prefixLengthsPsr4</full_name>
    <default>array()</default>
        <docblock line="53">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, array&lt;string, int&gt;&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="58" visibility="private">
    <name>prefixDirsPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::$prefixDirsPsr4</full_name>
    <default>array()</default>
        <docblock line="58">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, array&lt;int, string&gt;&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="63" visibility="private">
    <name>fallbackDirsPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::$fallbackDirsPsr4</full_name>
    <default>array()</default>
        <docblock line="63">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, string&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="70" visibility="private">
    <name>prefixesPsr0</name>
    <full_name>\Composer\Autoload\ClassLoader::$prefixesPsr0</full_name>
    <default>array()</default>
        <docblock line="70">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, array&lt;string, string[]&gt;&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="75" visibility="private">
    <name>fallbackDirsPsr0</name>
    <full_name>\Composer\Autoload\ClassLoader::$fallbackDirsPsr0</full_name>
    <default>array()</default>
        <docblock line="75">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, string&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="78" visibility="private">
    <name>useIncludePath</name>
    <full_name>\Composer\Autoload\ClassLoader::$useIncludePath</full_name>
    <default>false</default>
        <docblock line="78">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="bool"/>
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="84" visibility="private">
    <name>classMap</name>
    <full_name>\Composer\Autoload\ClassLoader::$classMap</full_name>
    <default>array()</default>
        <docblock line="84">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="string[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, string&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="87" visibility="private">
    <name>classMapAuthoritative</name>
    <full_name>\Composer\Autoload\ClassLoader::$classMapAuthoritative</full_name>
    <default>false</default>
        <docblock line="87">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="bool"/>
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="93" visibility="private">
    <name>missingClasses</name>
    <full_name>\Composer\Autoload\ClassLoader::$missingClasses</full_name>
    <default>array()</default>
        <docblock line="93">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="bool[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, bool&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="96" visibility="private">
    <name>apcuPrefix</name>
    <full_name>\Composer\Autoload\ClassLoader::$apcuPrefix</full_name>
    <default></default>
        <docblock line="96">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="?string"/>
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="101" visibility="private">
    <name>registeredLoaders</name>
    <full_name>\Composer\Autoload\ClassLoader::$registeredLoaders</full_name>
    <default>array()</default>
        <docblock line="101">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="self[]"/>
            </docblock>

</property>

                                        
                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="106"
        startColumn="2627"
        endLine="109"
        endColumn="2723"
        visibility="public"
        returnByReference="false"
        response="mixed">
    <name>__construct</name>
    <full_name>\Composer\Autoload\ClassLoader::__construct()</full_name>
    <value></value>
                <argument line="106" by_reference="false">
    <name>vendorDir</name>
    <default>null</default>
    <type>?string</type>
</argument>

        <docblock line="106">
    <description></description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="vendorDir"                                 type="?string"/>
                        </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="114"
        startColumn="2770"
        endLine="121"
        endColumn="2979"
        visibility="public"
        returnByReference="false"
        response="string[]">
    <name>getPrefixes</name>
    <full_name>\Composer\Autoload\ClassLoader::getPrefixes()</full_name>
    <value></value>
            <docblock line="114">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="string[]"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="127"
        startColumn="3080"
        endLine="130"
        endColumn="3162"
        visibility="public"
        returnByReference="false"
        response="array[]">
    <name>getPrefixesPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::getPrefixesPsr4()</full_name>
    <value></value>
            <docblock line="127">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-return"
                description="array&lt;string, array&lt;int, string&gt;&gt;"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="136"
        startColumn="3251"
        endLine="139"
        endColumn="3335"
        visibility="public"
        returnByReference="false"
        response="array[]">
    <name>getFallbackDirs</name>
    <full_name>\Composer\Autoload\ClassLoader::getFallbackDirs()</full_name>
    <value></value>
            <docblock line="136">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-return"
                description="array&lt;string, string&gt;"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="145"
        startColumn="3424"
        endLine="148"
        endColumn="3512"
        visibility="public"
        returnByReference="false"
        response="array[]">
    <name>getFallbackDirsPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::getFallbackDirsPsr4()</full_name>
    <value></value>
            <docblock line="145">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-return"
                description="array&lt;string, string&gt;"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="154"
        startColumn="3629"
        endLine="157"
        endColumn="3701"
        visibility="public"
        returnByReference="false"
        response="string[]">
    <name>getClassMap</name>
    <full_name>\Composer\Autoload\ClassLoader::getClassMap()</full_name>
    <value></value>
            <docblock line="154">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description="Array of classname =&gt; path"
                                                                                                 type="string[]"/>
                            <tag
                name="psalm-return"
                description="array&lt;string, string&gt;"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="165"
        startColumn="3858"
        endLine="172"
        endColumn="4083"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>addClassMap</name>
    <full_name>\Composer\Autoload\ClassLoader::addClassMap()</full_name>
    <value></value>
                <argument line="165" by_reference="false">
    <name>classMap</name>
    <default></default>
    <type>string[]</type>
</argument>

        <docblock line="165">
    <description></description>
    <long-description></long-description>
                    <tag
                name="param"
                description="Class to filename map"
                                                                 variable="classMap"                                 type="string[]"/>
                            <tag
                name="psalm-param"
                description="array&lt;string, string&gt; $classMap"
                                                                                                />
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="184"
        startColumn="4476"
        endLine="219"
        endColumn="5534"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>add</name>
    <full_name>\Composer\Autoload\ClassLoader::add()</full_name>
    <value></value>
                <argument line="184" by_reference="false">
    <name>prefix</name>
    <default></default>
    <type>string</type>
</argument>

            <argument line="184" by_reference="false">
    <name>paths</name>
    <default></default>
    <type>string[]|string</type>
</argument>

            <argument line="184" by_reference="false">
    <name>prepend</name>
    <default>false</default>
    <type>bool</type>
</argument>

        <docblock line="184">
    <description>Registers a set of PSR-0 directories for a given prefix, either
appending or prepending to the ones previously set for this prefix.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="The prefix"
                                                                 variable="prefix"                                 type="string"/>
                <tag
                name="param"
                description="The PSR-0 root directories"
                                                                 variable="paths"                                 type="string[]|string"/>
                <tag
                name="param"
                description="Whether to prepend the directories"
                                                                 variable="prepend"                                 type="bool"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="233"
        startColumn="6011"
        endLine="269"
        endColumn="7506"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>addPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::addPsr4()</full_name>
    <value></value>
                <argument line="233" by_reference="false">
    <name>prefix</name>
    <default></default>
    <type>string</type>
</argument>

            <argument line="233" by_reference="false">
    <name>paths</name>
    <default></default>
    <type>string[]|string</type>
</argument>

            <argument line="233" by_reference="false">
    <name>prepend</name>
    <default>false</default>
    <type>bool</type>
</argument>

        <docblock line="233">
    <description>Registers a set of PSR-4 directories for a given namespace, either
appending or prepending to the ones previously set for this namespace.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="The prefix/namespace, with trailing &#039;\\&#039;"
                                                                 variable="prefix"                                 type="string"/>
                <tag
                name="param"
                description="The PSR-4 base directories"
                                                                 variable="paths"                                 type="string[]|string"/>
                <tag
                name="param"
                description="Whether to prepend the directories"
                                                                 variable="prepend"                                 type="bool"/>
                            <tag
                name="throws"
                description=""
                                                                                                 type="\InvalidArgumentException"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="280"
        startColumn="7801"
        endLine="287"
        endColumn="8024"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>set</name>
    <full_name>\Composer\Autoload\ClassLoader::set()</full_name>
    <value></value>
                <argument line="280" by_reference="false">
    <name>prefix</name>
    <default></default>
    <type>string</type>
</argument>

            <argument line="280" by_reference="false">
    <name>paths</name>
    <default></default>
    <type>string[]|string</type>
</argument>

        <docblock line="280">
    <description>Registers a set of PSR-0 directories for a given prefix,
replacing any others previously set for this prefix.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="The prefix"
                                                                 variable="prefix"                                 type="string"/>
                <tag
                name="param"
                description="The PSR-0 base directories"
                                                                 variable="paths"                                 type="string[]|string"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="300"
        startColumn="8403"
        endLine="312"
        endColumn="8909"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>setPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::setPsr4()</full_name>
    <value></value>
                <argument line="300" by_reference="false">
    <name>prefix</name>
    <default></default>
    <type>string</type>
</argument>

            <argument line="300" by_reference="false">
    <name>paths</name>
    <default></default>
    <type>string[]|string</type>
</argument>

        <docblock line="300">
    <description>Registers a set of PSR-4 directories for a given namespace,
replacing any others previously set for this namespace.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="The prefix/namespace, with trailing &#039;\\&#039;"
                                                                 variable="prefix"                                 type="string"/>
                <tag
                name="param"
                description="The PSR-4 base directories"
                                                                 variable="paths"                                 type="string[]|string"/>
                            <tag
                name="throws"
                description=""
                                                                                                 type="\InvalidArgumentException"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="321"
        startColumn="9061"
        endLine="324"
        endColumn="9171"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>setUseIncludePath</name>
    <full_name>\Composer\Autoload\ClassLoader::setUseIncludePath()</full_name>
    <value></value>
                <argument line="321" by_reference="false">
    <name>useIncludePath</name>
    <default></default>
    <type>bool</type>
</argument>

        <docblock line="321">
    <description>Turns on searching the include path for class files.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="useIncludePath"                                 type="bool"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="332"
        startColumn="9318"
        endLine="335"
        endColumn="9402"
        visibility="public"
        returnByReference="false"
        response="bool">
    <name>getUseIncludePath</name>
    <full_name>\Composer\Autoload\ClassLoader::getUseIncludePath()</full_name>
    <value></value>
            <docblock line="332">
    <description>Can be used to check if the autoloader uses the include path to check
for classes.</description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="bool"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="345"
        startColumn="9633"
        endLine="348"
        endColumn="9771"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>setClassMapAuthoritative</name>
    <full_name>\Composer\Autoload\ClassLoader::setClassMapAuthoritative()</full_name>
    <value></value>
                <argument line="345" by_reference="false">
    <name>classMapAuthoritative</name>
    <default></default>
    <type>bool</type>
</argument>

        <docblock line="345">
    <description>Turns off searching the prefix and fallback directories for classes
that have not been registered with the class map.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="classMapAuthoritative"                                 type="bool"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="355"
        startColumn="9892"
        endLine="358"
        endColumn="9989"
        visibility="public"
        returnByReference="false"
        response="bool">
    <name>isClassMapAuthoritative</name>
    <full_name>\Composer\Autoload\ClassLoader::isClassMapAuthoritative()</full_name>
    <value></value>
            <docblock line="355">
    <description>Should class lookup fail if not found in the current class map?</description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="bool"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="367"
        startColumn="10173"
        endLine="370"
        endColumn="10369"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>setApcuPrefix</name>
    <full_name>\Composer\Autoload\ClassLoader::setApcuPrefix()</full_name>
    <value></value>
                <argument line="367" by_reference="false">
    <name>apcuPrefix</name>
    <default></default>
    <type>string|null</type>
</argument>

        <docblock line="367">
    <description>APCu prefix to use to cache found/not-found classes, if the extension is enabled.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="apcuPrefix"                                 type="string|null"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="377"
        startColumn="10497"
        endLine="380"
        endColumn="10573"
        visibility="public"
        returnByReference="false"
        response="string|null">
    <name>getApcuPrefix</name>
    <full_name>\Composer\Autoload\ClassLoader::getApcuPrefix()</full_name>
    <value></value>
            <docblock line="377">
    <description>The APCu prefix in use, or null if APCu caching is not enabled.</description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="string|null"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="389"
        startColumn="10748"
        endLine="403"
        endColumn="11226"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>register</name>
    <full_name>\Composer\Autoload\ClassLoader::register()</full_name>
    <value></value>
                <argument line="389" by_reference="false">
    <name>prepend</name>
    <default>false</default>
    <type>bool</type>
</argument>

        <docblock line="389">
    <description>Registers this instance as an autoloader.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="Whether to prepend the autoloader or not"
                                                                 variable="prepend"                                 type="bool"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="410"
        startColumn="11327"
        endLine="417"
        endColumn="11541"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>unregister</name>
    <full_name>\Composer\Autoload\ClassLoader::unregister()</full_name>
    <value></value>
            <docblock line="410">
    <description>Unregisters this instance as an autoloader.</description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="425"
        startColumn="11724"
        endLine="434"
        endColumn="11905"
        visibility="public"
        returnByReference="false"
        response="true|null">
    <name>loadClass</name>
    <full_name>\Composer\Autoload\ClassLoader::loadClass()</full_name>
    <value></value>
                <argument line="425" by_reference="false">
    <name>class</name>
    <default></default>
    <type>string</type>
</argument>

        <docblock line="425">
    <description>Loads the given class or interface.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="The name of the class"
                                                                 variable="class"                                 type="string"/>
                            <tag
                name="return"
                description="True if loaded, null otherwise"
                                                                                                 type="true|null"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="443"
        startColumn="12117"
        endLine="476"
        endColumn="13127"
        visibility="public"
        returnByReference="false"
        response="string|false">
    <name>findFile</name>
    <full_name>\Composer\Autoload\ClassLoader::findFile()</full_name>
    <value></value>
                <argument line="443" by_reference="false">
    <name>class</name>
    <default></default>
    <type>string</type>
</argument>

        <docblock line="443">
    <description>Finds the path to the file where the class is defined.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="The name of the class"
                                                                 variable="class"                                 type="string"/>
                            <tag
                name="return"
                description="The path if found, false otherwise"
                                                                                                 type="string|false"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer\Autoload"
        startLine="483"
        startColumn="13278"
        endLine="486"
        endColumn="13375"
        visibility="public"
        returnByReference="false"
        response="self[]">
    <name>getRegisteredLoaders</name>
    <full_name>\Composer\Autoload\ClassLoader::getRegisteredLoaders()</full_name>
    <value></value>
            <docblock line="483">
    <description>Returns the currently registered loaders indexed by their corresponding vendor directories.</description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="self[]"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="493"
        startColumn="13494"
        endLine="557"
        endColumn="15865"
        visibility="private"
        returnByReference="false"
        response="string|false">
    <name>findFileWithExtension</name>
    <full_name>\Composer\Autoload\ClassLoader::findFileWithExtension()</full_name>
    <value></value>
                <argument line="493" by_reference="false">
    <name>class</name>
    <default></default>
    <type>string</type>
</argument>

            <argument line="493" by_reference="false">
    <name>ext</name>
    <default></default>
    <type>string</type>
</argument>

        <docblock line="493">
    <description></description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="class"                                 type="string"/>
                <tag
                name="param"
                description=""
                                                                 variable="ext"                                 type="string"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="string|false"/>
            </docblock>

</method>

                                                        </class>
            
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="composer/installed.php" hash="6b7943b78d45ae0ae91a00bb57ae3651">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
            

            
                        
                        
                        
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="composer/InstalledVersions.php" hash="9b88aaec6b61ebb77e498fd2afc9e77d">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
                            <namespace-alias name="\Composer"/>
            

            
                        
                        
                                        <class final="false" abstract="false" namespace="\Composer" line="27">
                    <name>InstalledVersions</name>
                    <full_name>\Composer\InstalledVersions</full_name>
                    <docblock line="27">
    <description>This class is copied in every Composer installed project and available to all</description>
    <long-description>See also https://getcomposer.org/doc/07-runtime.md#installed-versions

To require its presence, you can require `composer-runtime-api ^2.0`</long-description>
                    <tag
                name="final"
                description=""
                                                                                                />
                            <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>

                    
                    
                                        
                                            <property namespace="\Composer\InstalledVersions" line="33" visibility="private">
    <name>installed</name>
    <full_name>\Composer\InstalledVersions::$installed</full_name>
    <default></default>
        <docblock line="33">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="array|null"/>
                            <tag
                name="psalm-var"
                description="array{root: array{name: string, version: string, reference: string, pretty_version: string, aliases: string[], dev: bool, install_path: string, type: string}, versions: array&lt;string, array{dev_requirement: bool, pretty_version?: string, version?: string, aliases?: string[], reference?: string, replaced?: string[], provided?: string[], install_path?: string, type?: string}&gt;}|array}|null"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\InstalledVersions" line="38" visibility="private">
    <name>canGetVendors</name>
    <full_name>\Composer\InstalledVersions::$canGetVendors</full_name>
    <default></default>
        <docblock line="38">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="bool|null"/>
            </docblock>

</property>

                                            <property namespace="\Composer\InstalledVersions" line="44" visibility="private">
    <name>installedByVendor</name>
    <full_name>\Composer\InstalledVersions::$installedByVendor</full_name>
    <default>array()</default>
        <docblock line="44">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, array{root: array{name: string, version: string, reference: string, pretty_version: string, aliases: string[], dev: bool, install_path: string, type: string}, versions: array&lt;string, array{dev_requirement: bool, pretty_version?: string, version?: string, aliases?: string[], reference?: string, replaced?: string[], provided?: string[], install_path?: string, type?: string}&gt;}&gt;"
                                                                                                />
            </docblock>

</property>

                                        
                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="52"
        startColumn="1886"
        endLine="64"
        endColumn="2270"
        visibility="public"
        returnByReference="false"
        response="string[]">
    <name>getInstalledPackages</name>
    <full_name>\Composer\InstalledVersions::getInstalledPackages()</full_name>
    <value></value>
            <docblock line="52">
    <description>Returns a list of all package names which are present, either by being installed, replaced or provided</description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="string[]"/>
                            <tag
                name="psalm-return"
                description="list&lt;string&gt;"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="73"
        startColumn="2467"
        endLine="86"
        endColumn="2892"
        visibility="public"
        returnByReference="false"
        response="string[]">
    <name>getInstalledPackagesByType</name>
    <full_name>\Composer\InstalledVersions::getInstalledPackagesByType()</full_name>
    <value></value>
                <argument line="73" by_reference="false">
    <name>type</name>
    <default></default>
    <type>string</type>
</argument>

        <docblock line="73">
    <description>Returns a list of all package names with a specific type e.g. &#039;library&#039;</description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="type"                                 type="string"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="string[]"/>
                            <tag
                name="psalm-return"
                description="list&lt;string&gt;"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="97"
        startColumn="3176"
        endLine="106"
        endColumn="3546"
        visibility="public"
        returnByReference="false"
        response="bool">
    <name>isInstalled</name>
    <full_name>\Composer\InstalledVersions::isInstalled()</full_name>
    <value></value>
                <argument line="97" by_reference="false">
    <name>packageName</name>
    <default></default>
    <type>string</type>
</argument>

            <argument line="97" by_reference="false">
    <name>includeDevRequirements</name>
    <default>true</default>
    <type>bool</type>
</argument>

        <docblock line="97">
    <description>Checks whether the given package is installed</description>
    <long-description>This also returns true if the package name is provided or replaced by another package</long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="packageName"                                 type="string"/>
                <tag
                name="param"
                description=""
                                                                 variable="includeDevRequirements"                                 type="bool"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="bool"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="120"
        startColumn="4182"
        endLine="126"
        endColumn="4471"
        visibility="public"
        returnByReference="false"
        response="bool">
    <name>satisfies</name>
    <full_name>\Composer\InstalledVersions::satisfies()</full_name>
    <value></value>
                <argument line="120" by_reference="false">
    <name>parser</name>
    <default></default>
    <type>\Composer\Semver\VersionParser</type>
</argument>

            <argument line="120" by_reference="false">
    <name>packageName</name>
    <default></default>
    <type>string</type>
</argument>

            <argument line="120" by_reference="false">
    <name>constraint</name>
    <default></default>
    <type>string|null</type>
</argument>

        <docblock line="120">
    <description>Checks whether the given package satisfies a version constraint</description>
    <long-description>e.g. If you want to know whether version 2.3+ of package foo/bar is installed, you would call:

Composer\InstalledVersions::satisfies(new VersionParser, &#039;foo/bar&#039;, &#039;^2.3&#039;)</long-description>
                    <tag
                name="param"
                description="Install composer/semver to have access to this class and functionality"
                                                                 variable="parser"                                 type="\Composer\Semver\VersionParser"/>
                <tag
                name="param"
                description=""
                                                                 variable="packageName"                                 type="string"/>
                <tag
                name="param"
                description="A version constraint to check for, if you pass one you have to make sure composer/semver is required by your package"
                                                                 variable="constraint"                                 type="string|null"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="bool"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="137"
        startColumn="4908"
        endLine="162"
        endColumn="6083"
        visibility="public"
        returnByReference="false"
        response="string">
    <name>getVersionRanges</name>
    <full_name>\Composer\InstalledVersions::getVersionRanges()</full_name>
    <value></value>
                <argument line="137" by_reference="false">
    <name>packageName</name>
    <default></default>
    <type>string</type>
</argument>

        <docblock line="137">
    <description>Returns a version constraint representing all the range(s) which are installed for a given package</description>
    <long-description>It is easier to use this via isInstalled() with the $constraint argument if you need to check
whether a given version of a package is installed, and not just whether it exists</long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="packageName"                                 type="string"/>
                            <tag
                name="return"
                description="Version constraint usable with composer/semver"
                                                                                                 type="string"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="168"
        startColumn="6365"
        endLine="183"
        endColumn="6873"
        visibility="public"
        returnByReference="false"
        response="string|null">
    <name>getVersion</name>
    <full_name>\Composer\InstalledVersions::getVersion()</full_name>
    <value></value>
                <argument line="168" by_reference="false">
    <name>packageName</name>
    <default></default>
    <type>string</type>
</argument>

        <docblock line="168">
    <description></description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="packageName"                                 type="string"/>
                            <tag
                name="return"
                description="If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present"
                                                                                                 type="string|null"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="189"
        startColumn="7155"
        endLine="204"
        endColumn="7683"
        visibility="public"
        returnByReference="false"
        response="string|null">
    <name>getPrettyVersion</name>
    <full_name>\Composer\InstalledVersions::getPrettyVersion()</full_name>
    <value></value>
                <argument line="189" by_reference="false">
    <name>packageName</name>
    <default></default>
    <type>string</type>
</argument>

        <docblock line="189">
    <description></description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="packageName"                                 type="string"/>
                            <tag
                name="return"
                description="If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present"
                                                                                                 type="string|null"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="210"
        startColumn="7882"
        endLine="225"
        endColumn="8396"
        visibility="public"
        returnByReference="false"
        response="string|null">
    <name>getReference</name>
    <full_name>\Composer\InstalledVersions::getReference()</full_name>
    <value></value>
                <argument line="210" by_reference="false">
    <name>packageName</name>
    <default></default>
    <type>string</type>
</argument>

        <docblock line="210">
    <description></description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="packageName"                                 type="string"/>
                            <tag
                name="return"
                description="If the package is being replaced or provided but is not really installed, null will be returned as reference"
                                                                                                 type="string|null"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="231"
        startColumn="8660"
        endLine="242"
        endColumn="9127"
        visibility="public"
        returnByReference="false"
        response="string|null">
    <name>getInstallPath</name>
    <full_name>\Composer\InstalledVersions::getInstallPath()</full_name>
    <value></value>
                <argument line="231" by_reference="false">
    <name>packageName</name>
    <default></default>
    <type>string</type>
</argument>

        <docblock line="231">
    <description></description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="packageName"                                 type="string"/>
                            <tag
                name="return"
                description="If the package is being replaced or provided but is not really installed, null will be returned as install path. Packages of type metapackages also have a null install path."
                                                                                                 type="string|null"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="248"
        startColumn="9338"
        endLine="253"
        endColumn="9470"
        visibility="public"
        returnByReference="false"
        response="array">
    <name>getRootPackage</name>
    <full_name>\Composer\InstalledVersions::getRootPackage()</full_name>
    <value></value>
            <docblock line="248">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="array"/>
                            <tag
                name="psalm-return"
                description="array{name: string, version: string, reference: string, pretty_version: string, aliases: string[], dev: bool, install_path: string, type: string}"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="262"
        startColumn="10192"
        endLine="277"
        endColumn="10988"
        visibility="public"
        returnByReference="false"
        response="array[]">
    <name>getRawData</name>
    <full_name>\Composer\InstalledVersions::getRawData()</full_name>
    <value></value>
            <docblock line="262">
    <description>Returns the raw installed.php data for custom implementations</description>
    <long-description></long-description>
                    <tag
                name="deprecated"
                description="Use getAllRawData() instead which returns all datasets for all autoloaders present in the process. getRawData only returns the first dataset loaded, which may not be what you expect."
                                                                                                />
                            <tag
                name="return"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-return"
                description="array{root: array{name: string, version: string, reference: string, pretty_version: string, aliases: string[], dev: bool, install_path: string, type: string}, versions: array&lt;string, array{dev_requirement: bool, pretty_version?: string, version?: string, aliases?: string[], reference?: string, replaced?: string[], provided?: string[], install_path?: string, type?: string}&gt;}"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="285"
        startColumn="11548"
        endLine="288"
        endColumn="11634"
        visibility="public"
        returnByReference="false"
        response="array[]">
    <name>getAllRawData</name>
    <full_name>\Composer\InstalledVersions::getAllRawData()</full_name>
    <value></value>
            <docblock line="285">
    <description>Returns the raw data of all installed.php which are currently loaded for custom implementations</description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-return"
                description="list&lt;array{root: array{name: string, version: string, reference: string, pretty_version: string, aliases: string[], dev: bool, install_path: string, type: string}, versions: array&lt;string, array{dev_requirement: bool, pretty_version?: string, version?: string, aliases?: string[], reference?: string, replaced?: string[], provided?: string[], install_path?: string, type?: string}&gt;}&gt;"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="308"
        startColumn="12901"
        endLine="312"
        endColumn="13026"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>reload</name>
    <full_name>\Composer\InstalledVersions::reload()</full_name>
    <value></value>
                <argument line="308" by_reference="false">
    <name>data</name>
    <default></default>
    <type>array[]</type>
</argument>

        <docblock line="308">
    <description>Lets you reload the static array from another file</description>
    <long-description>This is only useful for complex integrations in which a project needs to use
this class but then also needs to execute another project&#039;s autoloader in process,
and wants to ensure both projects have access to their version of installed.php.

A typical case would be PHPUnit, where it would need to make sure it reads all
the data it needs from this class, then call reload() with
`require $CWD/vendor/composer/installed.php` (or similar) as input to make sure
the project in which it runs can then also use this class safely, without
interference between PHPUnit&#039;s dependencies and the project&#039;s dependencies.</long-description>
                    <tag
                name="param"
                description="A vendor/composer/installed.php data set"
                                                                 variable="data"                                 type="array[]"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
                            <tag
                name="psalm-param"
                description="array{root: array{name: string, version: string, reference: string, pretty_version: string, aliases: string[], dev: bool, install_path: string, type: string}, versions: array&lt;string, array{dev_requirement: bool, pretty_version?: string, version?: string, aliases?: string[], reference?: string, replaced?: string[], provided?: string[], install_path?: string, type?: string}&gt;} $data"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer"
        startLine="318"
        startColumn="13476"
        endLine="351"
        endColumn="15000"
        visibility="private"
        returnByReference="false"
        response="array[]">
    <name>getInstalled</name>
    <full_name>\Composer\InstalledVersions::getInstalled()</full_name>
    <value></value>
            <docblock line="318">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-return"
                description="list&lt;array{root: array{name: string, version: string, reference: string, pretty_version: string, aliases: string[], dev: bool, install_path: string, type: string}, versions: array&lt;string, array{dev_requirement: bool, pretty_version?: string, version?: string, aliases?: string[], reference?: string, replaced?: string[], provided?: string[], install_path?: string, type?: string}&gt;}&gt;"
                                                                                                />
            </docblock>

</method>

                                                        </class>
            
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="leovie/dto-repository/src/VendorDTO.php" hash="8d98ba9bf88ca2b64d767aea02554e33">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="noinspection"
                description="ALL"
                                                                                                />
                            <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
                            <namespace-alias name="\LeoVie\DTORepository"/>
            

            
                        
                        
                                        <class final="false" abstract="false" namespace="\LeoVie\DTORepository" line="5">
                    <name>VendorDTO</name>
                    <full_name>\LeoVie\DTORepository\VendorDTO</full_name>
                    <docblock line="5">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>

                    
                    
                                        
                                            <property namespace="\LeoVie\DTORepository\VendorDTO" line="9" visibility="private">
    <name>p1</name>
    <full_name>\LeoVie\DTORepository\VendorDTO::$p1</full_name>
    <default></default>
        <docblock line="9">
    <description></description>
    <long-description></long-description>
    </docblock>

</property>

                                            <property namespace="\LeoVie\DTORepository\VendorDTO" line="10" visibility="private">
    <name>p2</name>
    <full_name>\LeoVie\DTORepository\VendorDTO::$p2</full_name>
    <default></default>
        <docblock line="10">
    <description></description>
    <long-description></long-description>
    </docblock>

</property>

                                        
                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\LeoVie\DTORepository"
        startLine="8"
        startColumn="132"
        endLine="13"
        endColumn="235"
        visibility="public"
        returnByReference="false"
        response="mixed">
    <name>__construct</name>
    <full_name>\LeoVie\DTORepository\VendorDTO::__construct()</full_name>
    <value></value>
                <argument line="8" by_reference="false">
    <name>p1</name>
    <default></default>
    <type>array&lt;int,int&gt;</type>
</argument>

            <argument line="8" by_reference="false">
    <name>p2</name>
    <default></default>
    <type>int</type>
</argument>

        <docblock line="8">
    <description></description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="p1"                                 type="array&lt;int,int&gt;"/>
                        </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\LeoVie\DTORepository"
        startLine="15"
        startColumn="244"
        endLine="18"
        endColumn="314"
        visibility="public"
        returnByReference="false"
        response="array">
    <name>getP1</name>
    <full_name>\LeoVie\DTORepository\VendorDTO::getP1()</full_name>
    <value></value>
            <docblock line="15">
    <description></description>
    <long-description></long-description>
                </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\LeoVie\DTORepository"
        startLine="20"
        startColumn="323"
        endLine="23"
        endColumn="391"
        visibility="public"
        returnByReference="false"
        response="int">
    <name>getP2</name>
    <full_name>\LeoVie\DTORepository\VendorDTO::getP2()</full_name>
    <value></value>
            <docblock line="20">
    <description></description>
    <long-description></long-description>
                </docblock>

</method>

                                                        </class>
            
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="leovie/dto-repository/vendor/autoload.php" hash="9f8078f25c191ece901be2c82eee2685">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
            

            
                        
                        
                        
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="leovie/dto-repository/vendor/composer/autoload_classmap.php" hash="5615b29a1f5688414d56a1515d954a91">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
            

            
                        
                        
                        
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="leovie/dto-repository/vendor/composer/autoload_namespaces.php" hash="224007c97efb82c7b45b0e92f240af41">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
            

            
                        
                        
                        
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="leovie/dto-repository/vendor/composer/autoload_psr4.php" hash="ecb101504b735b8b21e3838d38aa019a">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
            

            
                        
                        
                        
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="leovie/dto-repository/vendor/composer/autoload_real.php" hash="7c26b51bb6f118084da5f8a3154bf701">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
            

            
                        
                        
                                        <class final="false" abstract="false" namespace="\" line="5">
                    <name>ComposerAutoloaderInitd1d965e01cffbbe438ce59117dbbd526</name>
                    <full_name>\ComposerAutoloaderInitd1d965e01cffbbe438ce59117dbbd526</full_name>
                    <docblock line="5">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>

                    
                    
                                        
                                            <property namespace="\ComposerAutoloaderInitd1d965e01cffbbe438ce59117dbbd526" line="7" visibility="private">
    <name>loader</name>
    <full_name>\ComposerAutoloaderInitd1d965e01cffbbe438ce59117dbbd526::$loader</full_name>
    <default></default>
        <docblock line="7">
    <description></description>
    <long-description></long-description>
                </docblock>

</property>

                                        
                                            <method final="false"
        abstract="false"
        static="true"
        namespace=""
        startLine="9"
        startColumn="148"
        endLine="14"
        endColumn="323"
        visibility="public"
        returnByReference="false"
        response="mixed">
    <name>loadClassLoader</name>
    <full_name>\ComposerAutoloaderInitd1d965e01cffbbe438ce59117dbbd526::loadClassLoader()</full_name>
    <value></value>
                <argument line="9" by_reference="false">
    <name>class</name>
    <default></default>
    <type>mixed</type>
</argument>

        <docblock line="9">
    <description></description>
    <long-description></long-description>
                            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace=""
        startLine="19"
        startColumn="392"
        endLine="35"
        endColumn="1083"
        visibility="public"
        returnByReference="false"
        response="\Composer\Autoload\ClassLoader">
    <name>getLoader</name>
    <full_name>\ComposerAutoloaderInitd1d965e01cffbbe438ce59117dbbd526::getLoader()</full_name>
    <value></value>
            <docblock line="19">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="\Composer\Autoload\ClassLoader"/>
            </docblock>

</method>

                                                        </class>
            
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="leovie/dto-repository/vendor/composer/autoload_static.php" hash="0c594b268a4d61e2b687147ac2e3574a">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
                            <namespace-alias name="\Composer\Autoload"/>
            

            
                        
                        
                                        <class final="false" abstract="false" namespace="\Composer\Autoload" line="7">
                    <name>ComposerStaticInitd1d965e01cffbbe438ce59117dbbd526</name>
                    <full_name>\Composer\Autoload\ComposerStaticInitd1d965e01cffbbe438ce59117dbbd526</full_name>
                    <docblock line="7">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>

                    
                    
                                        
                                            <property namespace="\Composer\Autoload\ComposerStaticInitd1d965e01cffbbe438ce59117dbbd526" line="9" visibility="public">
    <name>prefixLengthsPsr4</name>
    <full_name>\Composer\Autoload\ComposerStaticInitd1d965e01cffbbe438ce59117dbbd526::$prefixLengthsPsr4</full_name>
    <default>array(&#039;L&#039; =&gt; array(&#039;Leovie\\DtoRepository\\&#039; =&gt; 21))</default>
        <docblock line="9">
    <description></description>
    <long-description></long-description>
                </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ComposerStaticInitd1d965e01cffbbe438ce59117dbbd526" line="16" visibility="public">
    <name>prefixDirsPsr4</name>
    <full_name>\Composer\Autoload\ComposerStaticInitd1d965e01cffbbe438ce59117dbbd526::$prefixDirsPsr4</full_name>
    <default>array(&#039;Leovie\\DtoRepository\\&#039; =&gt; array(0 =&gt; __DIR__ . &#039;/../..&#039; . &#039;/src&#039;))</default>
        <docblock line="16">
    <description></description>
    <long-description></long-description>
                </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ComposerStaticInitd1d965e01cffbbe438ce59117dbbd526" line="23" visibility="public">
    <name>classMap</name>
    <full_name>\Composer\Autoload\ComposerStaticInitd1d965e01cffbbe438ce59117dbbd526::$classMap</full_name>
    <default>array(&#039;Composer\\InstalledVersions&#039; =&gt; __DIR__ . &#039;/..&#039; . &#039;/composer/InstalledVersions.php&#039;)</default>
        <docblock line="23">
    <description></description>
    <long-description></long-description>
                </docblock>

</property>

                                        
                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer\Autoload"
        startLine="27"
        startColumn="593"
        endLine="35"
        endColumn="1074"
        visibility="public"
        returnByReference="false"
        response="mixed">
    <name>getInitializer</name>
    <full_name>\Composer\Autoload\ComposerStaticInitd1d965e01cffbbe438ce59117dbbd526::getInitializer()</full_name>
    <value></value>
                <argument line="27" by_reference="false">
    <name>loader</name>
    <default></default>
    <type>\Composer\Autoload\ClassLoader</type>
</argument>

        <docblock line="27">
    <description></description>
    <long-description></long-description>
                            </docblock>

</method>

                                                        </class>
            
                        
            
            <parse_markers></parse_markers>
        </file>
            <file path="leovie/dto-repository/vendor/composer/ClassLoader.php" hash="80e3127bb630c512c42cfb51366ec09c">
            <docblock line="0">
    <description></description>
    <long-description></long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>


            
                            <namespace-alias name="\Composer\Autoload"/>
            

            
                                        <function namespace="\Composer\Autoload" line="569" package="\Application" returnByReference="false">
                    <name>includeFile</name>
                    <full_name>\Composer\Autoload\includeFile()</full_name>
                    <docblock line="569">
    <description>Scope isolated include.</description>
    <long-description>Prevents access to $this/self from included files.</long-description>
                    <tag
                name="package"
                description="Application"
                                                                                                />
                            <tag
                name="param"
                description=""
                                                                 variable="file"                                 type="string"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
                            <tag
                name="private"
                description=""
                                                                                                />
            </docblock>

                                            <argument line="569" by_reference="false">
    <name>file</name>
    <default></default>
    <type>string</type>
</argument>

                                    </function>
            
                        
                                        <class final="false" abstract="false" namespace="\Composer\Autoload" line="43">
                    <name>ClassLoader</name>
                    <full_name>\Composer\Autoload\ClassLoader</full_name>
                    <docblock line="43">
    <description>ClassLoader implements a PSR-0, PSR-4 and classmap class loader.</description>
    <long-description>$loader = new \Composer\Autoload\ClassLoader();

    // register classes with namespaces
    $loader-&gt;add(&#039;Symfony\Component&#039;, __DIR__.&#039;/component&#039;);
    $loader-&gt;add(&#039;Symfony&#039;,           __DIR__.&#039;/framework&#039;);

    // activate the autoloader
    $loader-&gt;register();

    // to enable searching the include path (eg. for PEAR packages)
    $loader-&gt;setUseIncludePath(true);

In this example, if you try to use a class in the Symfony\Component
namespace or one of its children (Symfony\Component\Console for instance),
the autoloader will first look for the class under the component/
directory, and it will then fallback to the framework/ directory if not
found before giving up.

This class is loosely based on the Symfony UniversalClassLoader.</long-description>
                    <tag
                name="author"
                description="Fabien Potencier &lt;fabien@symfony.com&gt;"
                                                                                                />
                <tag
                name="author"
                description="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"
                                                                                                />
                            <tag
                name="see"
                description=""
                                                 link="https://www.php-fig.org/psr/psr-0/"                                                />
                <tag
                name="see"
                description=""
                                                 link="https://www.php-fig.org/psr/psr-4/"                                                />
                            <tag
                name="package"
                description="Application"
                                                                                                />
            </docblock>

                    
                    
                                        
                                            <property namespace="\Composer\Autoload\ClassLoader" line="46" visibility="private">
    <name>vendorDir</name>
    <full_name>\Composer\Autoload\ClassLoader::$vendorDir</full_name>
    <default></default>
        <docblock line="46">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="?string"/>
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="53" visibility="private">
    <name>prefixLengthsPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::$prefixLengthsPsr4</full_name>
    <default>array()</default>
        <docblock line="53">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, array&lt;string, int&gt;&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="58" visibility="private">
    <name>prefixDirsPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::$prefixDirsPsr4</full_name>
    <default>array()</default>
        <docblock line="58">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, array&lt;int, string&gt;&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="63" visibility="private">
    <name>fallbackDirsPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::$fallbackDirsPsr4</full_name>
    <default>array()</default>
        <docblock line="63">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, string&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="70" visibility="private">
    <name>prefixesPsr0</name>
    <full_name>\Composer\Autoload\ClassLoader::$prefixesPsr0</full_name>
    <default>array()</default>
        <docblock line="70">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, array&lt;string, string[]&gt;&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="75" visibility="private">
    <name>fallbackDirsPsr0</name>
    <full_name>\Composer\Autoload\ClassLoader::$fallbackDirsPsr0</full_name>
    <default>array()</default>
        <docblock line="75">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, string&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="78" visibility="private">
    <name>useIncludePath</name>
    <full_name>\Composer\Autoload\ClassLoader::$useIncludePath</full_name>
    <default>false</default>
        <docblock line="78">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="bool"/>
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="84" visibility="private">
    <name>classMap</name>
    <full_name>\Composer\Autoload\ClassLoader::$classMap</full_name>
    <default>array()</default>
        <docblock line="84">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="string[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, string&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="87" visibility="private">
    <name>classMapAuthoritative</name>
    <full_name>\Composer\Autoload\ClassLoader::$classMapAuthoritative</full_name>
    <default>false</default>
        <docblock line="87">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="bool"/>
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="93" visibility="private">
    <name>missingClasses</name>
    <full_name>\Composer\Autoload\ClassLoader::$missingClasses</full_name>
    <default>array()</default>
        <docblock line="93">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="bool[]"/>
                            <tag
                name="psalm-var"
                description="array&lt;string, bool&gt;"
                                                                                                />
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="96" visibility="private">
    <name>apcuPrefix</name>
    <full_name>\Composer\Autoload\ClassLoader::$apcuPrefix</full_name>
    <default></default>
        <docblock line="96">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="?string"/>
            </docblock>

</property>

                                            <property namespace="\Composer\Autoload\ClassLoader" line="101" visibility="private">
    <name>registeredLoaders</name>
    <full_name>\Composer\Autoload\ClassLoader::$registeredLoaders</full_name>
    <default>array()</default>
        <docblock line="101">
    <description></description>
    <long-description></long-description>
                    <tag
                name="var"
                description=""
                                                                                                 type="self[]"/>
            </docblock>

</property>

                                        
                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="106"
        startColumn="2627"
        endLine="109"
        endColumn="2723"
        visibility="public"
        returnByReference="false"
        response="mixed">
    <name>__construct</name>
    <full_name>\Composer\Autoload\ClassLoader::__construct()</full_name>
    <value></value>
                <argument line="106" by_reference="false">
    <name>vendorDir</name>
    <default>null</default>
    <type>?string</type>
</argument>

        <docblock line="106">
    <description></description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="vendorDir"                                 type="?string"/>
                        </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="114"
        startColumn="2770"
        endLine="121"
        endColumn="2979"
        visibility="public"
        returnByReference="false"
        response="string[]">
    <name>getPrefixes</name>
    <full_name>\Composer\Autoload\ClassLoader::getPrefixes()</full_name>
    <value></value>
            <docblock line="114">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="string[]"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="127"
        startColumn="3080"
        endLine="130"
        endColumn="3162"
        visibility="public"
        returnByReference="false"
        response="array[]">
    <name>getPrefixesPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::getPrefixesPsr4()</full_name>
    <value></value>
            <docblock line="127">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-return"
                description="array&lt;string, array&lt;int, string&gt;&gt;"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="136"
        startColumn="3251"
        endLine="139"
        endColumn="3335"
        visibility="public"
        returnByReference="false"
        response="array[]">
    <name>getFallbackDirs</name>
    <full_name>\Composer\Autoload\ClassLoader::getFallbackDirs()</full_name>
    <value></value>
            <docblock line="136">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-return"
                description="array&lt;string, string&gt;"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="145"
        startColumn="3424"
        endLine="148"
        endColumn="3512"
        visibility="public"
        returnByReference="false"
        response="array[]">
    <name>getFallbackDirsPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::getFallbackDirsPsr4()</full_name>
    <value></value>
            <docblock line="145">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="array[]"/>
                            <tag
                name="psalm-return"
                description="array&lt;string, string&gt;"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="154"
        startColumn="3629"
        endLine="157"
        endColumn="3701"
        visibility="public"
        returnByReference="false"
        response="string[]">
    <name>getClassMap</name>
    <full_name>\Composer\Autoload\ClassLoader::getClassMap()</full_name>
    <value></value>
            <docblock line="154">
    <description></description>
    <long-description></long-description>
                    <tag
                name="return"
                description="Array of classname =&gt; path"
                                                                                                 type="string[]"/>
                            <tag
                name="psalm-return"
                description="array&lt;string, string&gt;"
                                                                                                />
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="165"
        startColumn="3858"
        endLine="172"
        endColumn="4083"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>addClassMap</name>
    <full_name>\Composer\Autoload\ClassLoader::addClassMap()</full_name>
    <value></value>
                <argument line="165" by_reference="false">
    <name>classMap</name>
    <default></default>
    <type>string[]</type>
</argument>

        <docblock line="165">
    <description></description>
    <long-description></long-description>
                    <tag
                name="param"
                description="Class to filename map"
                                                                 variable="classMap"                                 type="string[]"/>
                            <tag
                name="psalm-param"
                description="array&lt;string, string&gt; $classMap"
                                                                                                />
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="184"
        startColumn="4476"
        endLine="219"
        endColumn="5534"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>add</name>
    <full_name>\Composer\Autoload\ClassLoader::add()</full_name>
    <value></value>
                <argument line="184" by_reference="false">
    <name>prefix</name>
    <default></default>
    <type>string</type>
</argument>

            <argument line="184" by_reference="false">
    <name>paths</name>
    <default></default>
    <type>string[]|string</type>
</argument>

            <argument line="184" by_reference="false">
    <name>prepend</name>
    <default>false</default>
    <type>bool</type>
</argument>

        <docblock line="184">
    <description>Registers a set of PSR-0 directories for a given prefix, either
appending or prepending to the ones previously set for this prefix.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="The prefix"
                                                                 variable="prefix"                                 type="string"/>
                <tag
                name="param"
                description="The PSR-0 root directories"
                                                                 variable="paths"                                 type="string[]|string"/>
                <tag
                name="param"
                description="Whether to prepend the directories"
                                                                 variable="prepend"                                 type="bool"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="233"
        startColumn="6011"
        endLine="269"
        endColumn="7506"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>addPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::addPsr4()</full_name>
    <value></value>
                <argument line="233" by_reference="false">
    <name>prefix</name>
    <default></default>
    <type>string</type>
</argument>

            <argument line="233" by_reference="false">
    <name>paths</name>
    <default></default>
    <type>string[]|string</type>
</argument>

            <argument line="233" by_reference="false">
    <name>prepend</name>
    <default>false</default>
    <type>bool</type>
</argument>

        <docblock line="233">
    <description>Registers a set of PSR-4 directories for a given namespace, either
appending or prepending to the ones previously set for this namespace.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="The prefix/namespace, with trailing &#039;\\&#039;"
                                                                 variable="prefix"                                 type="string"/>
                <tag
                name="param"
                description="The PSR-4 base directories"
                                                                 variable="paths"                                 type="string[]|string"/>
                <tag
                name="param"
                description="Whether to prepend the directories"
                                                                 variable="prepend"                                 type="bool"/>
                            <tag
                name="throws"
                description=""
                                                                                                 type="\InvalidArgumentException"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="280"
        startColumn="7801"
        endLine="287"
        endColumn="8024"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>set</name>
    <full_name>\Composer\Autoload\ClassLoader::set()</full_name>
    <value></value>
                <argument line="280" by_reference="false">
    <name>prefix</name>
    <default></default>
    <type>string</type>
</argument>

            <argument line="280" by_reference="false">
    <name>paths</name>
    <default></default>
    <type>string[]|string</type>
</argument>

        <docblock line="280">
    <description>Registers a set of PSR-0 directories for a given prefix,
replacing any others previously set for this prefix.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="The prefix"
                                                                 variable="prefix"                                 type="string"/>
                <tag
                name="param"
                description="The PSR-0 base directories"
                                                                 variable="paths"                                 type="string[]|string"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="300"
        startColumn="8403"
        endLine="312"
        endColumn="8909"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>setPsr4</name>
    <full_name>\Composer\Autoload\ClassLoader::setPsr4()</full_name>
    <value></value>
                <argument line="300" by_reference="false">
    <name>prefix</name>
    <default></default>
    <type>string</type>
</argument>

            <argument line="300" by_reference="false">
    <name>paths</name>
    <default></default>
    <type>string[]|string</type>
</argument>

        <docblock line="300">
    <description>Registers a set of PSR-4 directories for a given namespace,
replacing any others previously set for this namespace.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="The prefix/namespace, with trailing &#039;\\&#039;"
                                                                 variable="prefix"                                 type="string"/>
                <tag
                name="param"
                description="The PSR-4 base directories"
                                                                 variable="paths"                                 type="string[]|string"/>
                            <tag
                name="throws"
                description=""
                                                                                                 type="\InvalidArgumentException"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="321"
        startColumn="9061"
        endLine="324"
        endColumn="9171"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>setUseIncludePath</name>
    <full_name>\Composer\Autoload\ClassLoader::setUseIncludePath()</full_name>
    <value></value>
                <argument line="321" by_reference="false">
    <name>useIncludePath</name>
    <default></default>
    <type>bool</type>
</argument>

        <docblock line="321">
    <description>Turns on searching the include path for class files.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="useIncludePath"                                 type="bool"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="332"
        startColumn="9318"
        endLine="335"
        endColumn="9402"
        visibility="public"
        returnByReference="false"
        response="bool">
    <name>getUseIncludePath</name>
    <full_name>\Composer\Autoload\ClassLoader::getUseIncludePath()</full_name>
    <value></value>
            <docblock line="332">
    <description>Can be used to check if the autoloader uses the include path to check
for classes.</description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="bool"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="345"
        startColumn="9633"
        endLine="348"
        endColumn="9771"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>setClassMapAuthoritative</name>
    <full_name>\Composer\Autoload\ClassLoader::setClassMapAuthoritative()</full_name>
    <value></value>
                <argument line="345" by_reference="false">
    <name>classMapAuthoritative</name>
    <default></default>
    <type>bool</type>
</argument>

        <docblock line="345">
    <description>Turns off searching the prefix and fallback directories for classes
that have not been registered with the class map.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="classMapAuthoritative"                                 type="bool"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="355"
        startColumn="9892"
        endLine="358"
        endColumn="9989"
        visibility="public"
        returnByReference="false"
        response="bool">
    <name>isClassMapAuthoritative</name>
    <full_name>\Composer\Autoload\ClassLoader::isClassMapAuthoritative()</full_name>
    <value></value>
            <docblock line="355">
    <description>Should class lookup fail if not found in the current class map?</description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="bool"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="367"
        startColumn="10173"
        endLine="370"
        endColumn="10369"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>setApcuPrefix</name>
    <full_name>\Composer\Autoload\ClassLoader::setApcuPrefix()</full_name>
    <value></value>
                <argument line="367" by_reference="false">
    <name>apcuPrefix</name>
    <default></default>
    <type>string|null</type>
</argument>

        <docblock line="367">
    <description>APCu prefix to use to cache found/not-found classes, if the extension is enabled.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="apcuPrefix"                                 type="string|null"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="377"
        startColumn="10497"
        endLine="380"
        endColumn="10573"
        visibility="public"
        returnByReference="false"
        response="string|null">
    <name>getApcuPrefix</name>
    <full_name>\Composer\Autoload\ClassLoader::getApcuPrefix()</full_name>
    <value></value>
            <docblock line="377">
    <description>The APCu prefix in use, or null if APCu caching is not enabled.</description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="string|null"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="389"
        startColumn="10748"
        endLine="403"
        endColumn="11226"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>register</name>
    <full_name>\Composer\Autoload\ClassLoader::register()</full_name>
    <value></value>
                <argument line="389" by_reference="false">
    <name>prepend</name>
    <default>false</default>
    <type>bool</type>
</argument>

        <docblock line="389">
    <description>Registers this instance as an autoloader.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="Whether to prepend the autoloader or not"
                                                                 variable="prepend"                                 type="bool"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="410"
        startColumn="11327"
        endLine="417"
        endColumn="11541"
        visibility="public"
        returnByReference="false"
        response="void">
    <name>unregister</name>
    <full_name>\Composer\Autoload\ClassLoader::unregister()</full_name>
    <value></value>
            <docblock line="410">
    <description>Unregisters this instance as an autoloader.</description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="void"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="425"
        startColumn="11724"
        endLine="434"
        endColumn="11905"
        visibility="public"
        returnByReference="false"
        response="true|null">
    <name>loadClass</name>
    <full_name>\Composer\Autoload\ClassLoader::loadClass()</full_name>
    <value></value>
                <argument line="425" by_reference="false">
    <name>class</name>
    <default></default>
    <type>string</type>
</argument>

        <docblock line="425">
    <description>Loads the given class or interface.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="The name of the class"
                                                                 variable="class"                                 type="string"/>
                            <tag
                name="return"
                description="True if loaded, null otherwise"
                                                                                                 type="true|null"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="443"
        startColumn="12117"
        endLine="476"
        endColumn="13127"
        visibility="public"
        returnByReference="false"
        response="string|false">
    <name>findFile</name>
    <full_name>\Composer\Autoload\ClassLoader::findFile()</full_name>
    <value></value>
                <argument line="443" by_reference="false">
    <name>class</name>
    <default></default>
    <type>string</type>
</argument>

        <docblock line="443">
    <description>Finds the path to the file where the class is defined.</description>
    <long-description></long-description>
                    <tag
                name="param"
                description="The name of the class"
                                                                 variable="class"                                 type="string"/>
                            <tag
                name="return"
                description="The path if found, false otherwise"
                                                                                                 type="string|false"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="true"
        namespace="\Composer\Autoload"
        startLine="483"
        startColumn="13278"
        endLine="486"
        endColumn="13375"
        visibility="public"
        returnByReference="false"
        response="self[]">
    <name>getRegisteredLoaders</name>
    <full_name>\Composer\Autoload\ClassLoader::getRegisteredLoaders()</full_name>
    <value></value>
            <docblock line="483">
    <description>Returns the currently registered loaders indexed by their corresponding vendor directories.</description>
    <long-description></long-description>
                    <tag
                name="return"
                description=""
                                                                                                 type="self[]"/>
            </docblock>

</method>

                                            <method final="false"
        abstract="false"
        static="false"
        namespace="\Composer\Autoload"
        startLine="493"
        startColumn="13494"
        endLine="557"
        endColumn="15865"
        visibility="private"
        returnByReference="false"
        response="string|false">
    <name>findFileWithExtension</name>
    <full_name>\Composer\Autoload\ClassLoader::findFileWithExtension()</full_name>
    <value></value>
                <argument line="493" by_reference="false">
    <name>class</name>
    <default></default>
    <type>string</type>
</argument>

            <argument line="493" by_reference="false">
    <name>ext</name>
    <default></default>
    <type>string</type>
</argument>

        <docblock line="493">
    <description></description>
    <long-description></long-description>
                    <tag
                name="param"
                description=""
                                                                 variable="class"                                 type="string"/>
                <tag
                name="param"
                description=""
                                                                 variable="ext"                                 type="string"/>
                            <tag
                name="return"
                description=""
                                                                                                 type="string|false"/>
            </docblock>

</method>

                                                        </class>
            
                        
            
            <parse_markers></parse_markers>
        </file>
    
            <namespace name="Autoload" full_name="\Composer\Autoload" />

            <namespace name="Composer" full_name="\Composer">
            <namespace name="Autoload" full_name="\Composer\Autoload" />

    </namespace>

            <namespace name="DTORepository" full_name="\LeoVie\DTORepository" />

            <namespace name="\" full_name="\">
            <namespace name="Composer" full_name="\Composer">
            <namespace name="Autoload" full_name="\Composer\Autoload" />

    </namespace>

            <namespace name="LeoVie" full_name="\LeoVie">
            <namespace name="DTORepository" full_name="\LeoVie\DTORepository" />

    </namespace>

    </namespace>

            <namespace name="LeoVie" full_name="\LeoVie">
            <namespace name="DTORepository" full_name="\LeoVie\DTORepository" />

    </namespace>

    </project>
