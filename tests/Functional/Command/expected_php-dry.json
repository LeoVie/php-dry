{
  "TYPE_1": [
    {
      "sourceClone": {
        "methods": [
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/01_A.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 202
                },
                "end": {
                  "line": 20,
                  "filePos": 383
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/03_A_Exact_Copy.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 213
                },
                "end": {
                  "line": 20,
                  "filePos": 394
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/04_A_Additional_Whitespaces.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 225
                },
                "end": {
                  "line": 21,
                  "filePos": 428
                },
                "countOfLines": 9
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r          = [];\r\n        $f = 100    ;\r\n        foreach ($p1 as     $i) {\r\n            $r[]    = $i * $p2;\r\n        }\r\n\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/05_A_Additional_Comments.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 222
                },
                "end": {
                  "line": 27,
                  "filePos": 592
                },
                "countOfLines": 15
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        \/*\r\n         * Some actions are following:\r\n         *\/\r\n        \/\/ first we do this\r\n        $r = [];\r\n        $f = 100;\r\n        \/\/ then in the loop\r\n        foreach ($p1 as $i) {\r\n            \/\/ we do this\r\n            $r[] = $i * $p2;\r\n        }\r\n        \/\/ and after that, we do this\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/06_A_Changed_Layout.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 217
                },
                "end": {
                  "line": 16,
                  "filePos": 362
                },
                "countOfLines": 4
              },
              "content": "function foo(array $p1, int $p2): array {\r\n        $r = []; $f = 100;\r\n        foreach ($p1 as $i) { $r[] = $i * $p2; }\r\n        return $r;\r\n    }"
            }
          }
        ]
      }
    }
  ],
  "TYPE_2": [
    {
      "sourceClone": {
        "methods": [
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/01_A.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 202
                },
                "end": {
                  "line": 20,
                  "filePos": 383
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/03_A_Exact_Copy.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 213
                },
                "end": {
                  "line": 20,
                  "filePos": 394
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/04_A_Additional_Whitespaces.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 225
                },
                "end": {
                  "line": 21,
                  "filePos": 428
                },
                "countOfLines": 9
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r          = [];\r\n        $f = 100    ;\r\n        foreach ($p1 as     $i) {\r\n            $r[]    = $i * $p2;\r\n        }\r\n\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/05_A_Additional_Comments.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 222
                },
                "end": {
                  "line": 27,
                  "filePos": 592
                },
                "countOfLines": 15
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        \/*\r\n         * Some actions are following:\r\n         *\/\r\n        \/\/ first we do this\r\n        $r = [];\r\n        $f = 100;\r\n        \/\/ then in the loop\r\n        foreach ($p1 as $i) {\r\n            \/\/ we do this\r\n            $r[] = $i * $p2;\r\n        }\r\n        \/\/ and after that, we do this\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/06_A_Changed_Layout.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 217
                },
                "end": {
                  "line": 16,
                  "filePos": 362
                },
                "countOfLines": 4
              },
              "content": "function foo(array $p1, int $p2): array {\r\n        $r = []; $f = 100;\r\n        foreach ($p1 as $i) { $r[] = $i * $p2; }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/07_A_Changed_Variable_Names.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 228
                },
                "end": {
                  "line": 20,
                  "filePos": 423
                },
                "countOfLines": 8
              },
              "content": "function foo(array $first, int $second): array\r\n    {\r\n        $x = [];\r\n        $k = 100;\r\n        foreach ($first as $y) {\r\n            $x[] = $y * $second;\r\n        }\r\n        return $x;\r\n    }"
            }
          },
          {
            "method": {
              "name": "bar",
              "methodSignature": "function bar(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/08_A_Changed_Method_Names.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 223
                },
                "end": {
                  "line": 20,
                  "filePos": 404
                },
                "countOfLines": 8
              },
              "content": "function bar(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/09_A_Changed_Literals.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 219
                },
                "end": {
                  "line": 20,
                  "filePos": 400
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = -20;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          }
        ]
      }
    }
  ],
  "TYPE_3": [
    {
      "sourceClone": {
        "methods": [
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/01_A.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 202
                },
                "end": {
                  "line": 20,
                  "filePos": 383
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/03_A_Exact_Copy.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 213
                },
                "end": {
                  "line": 20,
                  "filePos": 394
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/04_A_Additional_Whitespaces.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 225
                },
                "end": {
                  "line": 21,
                  "filePos": 428
                },
                "countOfLines": 9
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r          = [];\r\n        $f = 100    ;\r\n        foreach ($p1 as     $i) {\r\n            $r[]    = $i * $p2;\r\n        }\r\n\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/05_A_Additional_Comments.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 222
                },
                "end": {
                  "line": 27,
                  "filePos": 592
                },
                "countOfLines": 15
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        \/*\r\n         * Some actions are following:\r\n         *\/\r\n        \/\/ first we do this\r\n        $r = [];\r\n        $f = 100;\r\n        \/\/ then in the loop\r\n        foreach ($p1 as $i) {\r\n            \/\/ we do this\r\n            $r[] = $i * $p2;\r\n        }\r\n        \/\/ and after that, we do this\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/06_A_Changed_Layout.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 217
                },
                "end": {
                  "line": 16,
                  "filePos": 362
                },
                "countOfLines": 4
              },
              "content": "function foo(array $p1, int $p2): array {\r\n        $r = []; $f = 100;\r\n        foreach ($p1 as $i) { $r[] = $i * $p2; }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/07_A_Changed_Variable_Names.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 228
                },
                "end": {
                  "line": 20,
                  "filePos": 423
                },
                "countOfLines": 8
              },
              "content": "function foo(array $first, int $second): array\r\n    {\r\n        $x = [];\r\n        $k = 100;\r\n        foreach ($first as $y) {\r\n            $x[] = $y * $second;\r\n        }\r\n        return $x;\r\n    }"
            }
          },
          {
            "method": {
              "name": "bar",
              "methodSignature": "function bar(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/08_A_Changed_Method_Names.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 223
                },
                "end": {
                  "line": 20,
                  "filePos": 404
                },
                "countOfLines": 8
              },
              "content": "function bar(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/09_A_Changed_Literals.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 219
                },
                "end": {
                  "line": 20,
                  "filePos": 400
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = -20;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/11_A_Removed_Statements.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 221
                },
                "end": {
                  "line": 19,
                  "filePos": 383
                },
                "countOfLines": 7
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/12_A_Changed_Statement_Order.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 226
                },
                "end": {
                  "line": 20,
                  "filePos": 407
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $f = 100;\r\n        $r = [];\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(int, array<int,int>): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/14_A_Changed_Param_Order.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 222
                },
                "end": {
                  "line": 20,
                  "filePos": 403
                },
                "countOfLines": 8
              },
              "content": "function foo(int $p2, array $p1): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          }
        ]
      }
    }
  ],
  "TYPE_4": [
    {
      "sourceClone": {
        "methods": [
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/01_A.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 202
                },
                "end": {
                  "line": 20,
                  "filePos": 383
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/03_A_Exact_Copy.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 213
                },
                "end": {
                  "line": 20,
                  "filePos": 394
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/04_A_Additional_Whitespaces.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 225
                },
                "end": {
                  "line": 21,
                  "filePos": 428
                },
                "countOfLines": 9
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r          = [];\r\n        $f = 100    ;\r\n        foreach ($p1 as     $i) {\r\n            $r[]    = $i * $p2;\r\n        }\r\n\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/05_A_Additional_Comments.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 222
                },
                "end": {
                  "line": 27,
                  "filePos": 592
                },
                "countOfLines": 15
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        \/*\r\n         * Some actions are following:\r\n         *\/\r\n        \/\/ first we do this\r\n        $r = [];\r\n        $f = 100;\r\n        \/\/ then in the loop\r\n        foreach ($p1 as $i) {\r\n            \/\/ we do this\r\n            $r[] = $i * $p2;\r\n        }\r\n        \/\/ and after that, we do this\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/06_A_Changed_Layout.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 217
                },
                "end": {
                  "line": 16,
                  "filePos": 362
                },
                "countOfLines": 4
              },
              "content": "function foo(array $p1, int $p2): array {\r\n        $r = []; $f = 100;\r\n        foreach ($p1 as $i) { $r[] = $i * $p2; }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/07_A_Changed_Variable_Names.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 228
                },
                "end": {
                  "line": 20,
                  "filePos": 423
                },
                "countOfLines": 8
              },
              "content": "function foo(array $first, int $second): array\r\n    {\r\n        $x = [];\r\n        $k = 100;\r\n        foreach ($first as $y) {\r\n            $x[] = $y * $second;\r\n        }\r\n        return $x;\r\n    }"
            }
          },
          {
            "method": {
              "name": "bar",
              "methodSignature": "function bar(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/08_A_Changed_Method_Names.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 223
                },
                "end": {
                  "line": 20,
                  "filePos": 404
                },
                "countOfLines": 8
              },
              "content": "function bar(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/09_A_Changed_Literals.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 219
                },
                "end": {
                  "line": 20,
                  "filePos": 400
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = -20;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/10_A_Additional_Statements.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 224
                },
                "end": {
                  "line": 21,
                  "filePos": 442
                },
                "countOfLines": 9
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            print($i * $p2 . \"\\n\");\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/11_A_Removed_Statements.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 221
                },
                "end": {
                  "line": 19,
                  "filePos": 383
                },
                "countOfLines": 7
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $r = [];\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/12_A_Changed_Statement_Order.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 226
                },
                "end": {
                  "line": 20,
                  "filePos": 407
                },
                "countOfLines": 8
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        $f = 100;\r\n        $r = [];\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(array<int,int>, int): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/13_A_Changed_Syntax.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 217
                },
                "end": {
                  "line": 18,
                  "filePos": 358
                },
                "countOfLines": 6
              },
              "content": "function foo(array $p1, int $p2): array\r\n    {\r\n        return array_map(\r\n            fn($i) => $i * $p2,\r\n            $p1\r\n        );\r\n    }"
            }
          },
          {
            "method": {
              "name": "foo",
              "methodSignature": "function foo(int, array<int,int>): array<int,int>",
              "filepath": "\/app\/tests\/testdata\/clone-detection-testdata-with-native-types\/src\/14_A_Changed_Param_Order.php",
              "codePositionRange": {
                "start": {
                  "line": 12,
                  "filePos": 222
                },
                "end": {
                  "line": 20,
                  "filePos": 403
                },
                "countOfLines": 8
              },
              "content": "function foo(int $p2, array $p1): array\r\n    {\r\n        $r = [];\r\n        $f = 100;\r\n        foreach ($p1 as $i) {\r\n            $r[] = $i * $p2;\r\n        }\r\n        return $r;\r\n    }"
            }
          }
        ]
      }
    }
  ]
}